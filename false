<lively-window class="global" tabindex="0" title="html.js" style="position: absolute; left: 364px; top: 58px; z-index: 101; width: 850px; height: 600px;"><lively-container tabindex="0" src="https://lively-kernel.org/lively4/lively4-jens/src/client/html.js" mode="edit"></lively-container></lively-window><lively-window class="global" tabindex="0" title="lively-container.js" style="position: absolute; left: 280px; top: 168px; z-index: 100; width: 850px; height: 600px;"><lively-container tabindex="0" src="https://lively-kernel.org/lively4/lively4-jens/templates/lively-container.js" mode="edit"></lively-container></lively-window><lively-window class="global" tabindex="0" title="Workspace" style="z-index: 102; position: absolute; left: 714px; top: 316px; width: 888px; height: 508px;" active="true"><juicy-ace-editor last-changed="1489488490511"></juicy-ace-editor></lively-window><lively-preferences></lively-preferences><lively-container id="main-content" load="auto" data-lively4-donotpersist="all" src="https://lively-kernel.org/lively4/lively4-jens/demos/refactoring_workspace.js" tabindex="0" controls="shown" mode="show" style="width: calc(100%); height: calc(100%); position: fixed;"><pre><code class="hljs javascript">System.import(<span class="hljs-string">'systemjs-babel-build'</span>).then(<span class="hljs-function"><span class="hljs-params">m</span> =&gt;</span> <span class="hljs-built_in">window</span>.babel = m.babel)
System.import(<span class="hljs-string">'systemjs-babel-build'</span>).then(<span class="hljs-function"><span class="hljs-params">m</span> =&gt;</span> <span class="hljs-built_in">window</span>.babel = m.babel)
System.import(<span class="hljs-string">'demos/tanspilationbug.js'</span>).then(<span class="hljs-function"><span class="hljs-params">m</span> =&gt;</span> m.greet())


System.import(<span class="hljs-string">'demos/mymod.js'</span>).then(<span class="hljs-function"><span class="hljs-params">m</span> =&gt;</span> m.bla())



<span class="hljs-keyword">var</span> load  = System.loads[System.normalizeSync(<span class="hljs-string">'demos/mymod2.js'</span>)]
<span class="hljs-keyword">var</span> changedModule = System.normalizeSync(<span class="hljs-string">'demos/mymod2.js'</span>);
<span class="hljs-keyword">var</span> dependedModules = <span class="hljs-built_in">Object</span>.values(System.loads).filter( <span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> ea.dependencies.find(<span class="hljs-function"><span class="hljs-params">dep</span> =&gt;</span> System.normalizeSync(dep, ea.key) == changedModule))
dependedModules[<span class="hljs-number">0</span>].key <span class="hljs-comment">//  https://lively-kernel.org/lively4/lively4-jens/demos/mymod.js</span>

<span class="hljs-comment">// What shall we to with it? </span>

dependedModules.forEach( <span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> {
  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"reload "</span> + ea.key)
  System.registry.delete(ea.key)  
})


_.last(<span class="hljs-built_in">Object</span>.values(System.loads)).dependencies

SystemJS.normalizeSync

System.loads[System.normalizeSync(<span class="hljs-string">'demos/mymod.js'</span>)].dependencies
</code></pre></lively-container><div class=" ace_editor ace_autocomplete ace-tm" style="font-size: 12px; top: 501.865px; height: 100px; left: 709.414px; display: none;"><textarea class="ace_text-input" wrap="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="opacity: 0;"></textarea><div class="ace_gutter" style="display: none;"><div class="ace_layer ace_gutter-layer ace_folding-enabled" style="margin-top: 0px;"></div><div class="ace_gutter-active-line" style="display: none;"></div></div><div class="ace_scroller" style="left: 0px; right: 0px; bottom: 0px;"><div class="ace_content" style="cursor: default; margin-top: 0px; width: 280px; height: 133.333px; margin-left: 0px;"><div class="ace_layer ace_print-margin-layer"><div class="ace_print-margin" style="left: 531.817px; visibility: hidden;"></div></div><div class="ace_layer ace_marker-layer"><div class="ace_active-line" style="height:16.666667938232422px;top:16.666667938232422px;left:0;right:0;"></div></div><div class="ace_layer ace_text-layer" style="padding: 0px 4px;"><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">getUR</span><span class="ace_">L</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line ace_selected" style="height:16.666667938232422px"><span class="ace_completion-highlight">getUR</span><span class="ace_">LParameter</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">get</span><span class="ace_">HTMLSo</span><span class="ace_completion-highlight">ur</span><span class="ace_">ce</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">get</span><span class="ace_">Bo</span><span class="ace_completion-highlight">u</span><span class="ace_">ndingClient</span><span class="ace_completion-highlight">R</span><span class="ace_">ect</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">get</span><span class="ace_">DoitContextMod</span><span class="ace_completion-highlight">u</span><span class="ace_">leU</span><span class="ace_completion-highlight">r</span><span class="ace_">l</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">get</span><span class="ace_">Base</span><span class="ace_completion-highlight">UR</span><span class="ace_">L</span><span class="ace_rightAlignedText">Object</span></div></div><div class="ace_layer ace_marker-layer"></div><div class="ace_layer ace_cursor-layer ace_hidden-cursors" style="opacity: 0;"><div class="ace_cursor" style="left: 4px; top: 16.6667px; width: 6.59771px; height: 16.6667px;"></div></div></div></div><div class="ace_scrollbar ace_scrollbar-v" style="width: 22px; bottom: 0px; display: none;"><div class="ace_scrollbar-inner" style="width: 22px; height: 100px;"></div></div><div class="ace_scrollbar ace_scrollbar-h" style="display: none; height: 22px; left: 0px; right: 0px;"><div class="ace_scrollbar-inner" style="height: 22px; width: 263px;"></div></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: hidden;"><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;"></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</div></div></div><lively-notification-list hidden=""></lively-notification-list><div class=" ace_editor ace_autocomplete ace-tm" style="font-size: 12px; top: 560.531px; height: 133.333px; left: 643.437px; display: none;"><textarea class="ace_text-input" wrap="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="opacity: 0;"></textarea><div class="ace_gutter" style="display: none;"><div class="ace_layer ace_gutter-layer ace_folding-enabled" style="margin-top: 0px;"></div><div class="ace_gutter-active-line" style="display: none;"></div></div><div class="ace_scroller" style="left: 0px; right: 17px; bottom: 0px;"><div class="ace_content" style="cursor: default; margin-top: 0px; width: 263px; height: 166.667px; margin-left: 0px;"><div class="ace_layer ace_print-margin-layer"><div class="ace_print-margin" style="left: 531.817px; visibility: hidden;"></div></div><div class="ace_layer ace_marker-layer"><div class="ace_active-line" style="height:16.666667938232422px;top:50.000003814697266px;left:0;right:0;"></div></div><div class="ace_layer ace_text-layer" style="padding: 0px 4px;"><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">use</span><span class="ace_">SoftTabs</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">use</span><span class="ace_">r</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">use</span><span class="ace_">d</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line ace_selected" style="height:16.666667938232422px"><span class="ace_completion-highlight">use</span><span class="ace_">BrowserHistory</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">p</span><span class="ace_completion-highlight">us</span><span class="ace_">hStat</span><span class="ace_completion-highlight">e</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">f</span><span class="ace_completion-highlight">u</span><span class="ace_">ll</span><span class="ace_completion-highlight">s</span><span class="ace_">cr</span><span class="ace_completion-highlight">e</span><span class="ace_">en</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">f</span><span class="ace_completion-highlight">u</span><span class="ace_">ll</span><span class="ace_completion-highlight">s</span><span class="ace_">cr</span><span class="ace_completion-highlight">e</span><span class="ace_">enInline</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">isF</span><span class="ace_completion-highlight">u</span><span class="ace_">ll</span><span class="ace_completion-highlight">s</span><span class="ace_">cr</span><span class="ace_completion-highlight">e</span><span class="ace_">en</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">beca</span><span class="ace_completion-highlight">use</span><span class="ace_rightAlignedText">local</span></div></div><div class="ace_layer ace_marker-layer"></div><div class="ace_layer ace_cursor-layer ace_hidden-cursors" style="opacity: 0;"><div class="ace_cursor" style="left: 4px; top: 50px; width: 6.59771px; height: 16.6667px;"></div></div></div></div><div class="ace_scrollbar ace_scrollbar-v" style="width: 22px; bottom: 0px;"><div class="ace_scrollbar-inner" style="width: 22px; height: 450px;"></div></div><div class="ace_scrollbar ace_scrollbar-h" style="display: none; height: 22px; left: 0px; right: 17px;"><div class="ace_scrollbar-inner" style="height: 22px; width: 263px;"></div></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: hidden;"><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;"></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</div></div></div><div class=" ace_editor ace_autocomplete ace-tm" style="font-size: 12px; top: 374.198px; height: 133.333px; left: 724.241px; display: none;"><textarea class="ace_text-input" wrap="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="opacity: 0;"></textarea><div class="ace_gutter" style="display: none;"><div class="ace_layer ace_gutter-layer ace_folding-enabled" style="margin-top: 0px;"></div><div class="ace_gutter-active-line" style="display: none;"></div></div><div class="ace_scroller" style="left: 0px; right: 17px; bottom: 0px;"><div class="ace_content" style="cursor: default; margin-top: 0px; width: 263px; height: 166.667px; margin-left: 0px;"><div class="ace_layer ace_print-margin-layer"><div class="ace_print-margin" style="left: 531.817px; visibility: hidden;"></div></div><div class="ace_layer ace_marker-layer"><div class="ace_active-line" style="height:16.666667938232422px;top:0px;left:0;right:0;"></div></div><div class="ace_layer ace_text-layer" style="padding: 0px 4px;"><div class="ace_line ace_selected" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tentIsEditable</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">sole</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tentChanged</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">cat</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tentChangedDelay</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tainer-content</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tent</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">flict</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tainerEditor</span><span class="ace_rightAlignedText">local</span></div></div><div class="ace_layer ace_marker-layer"></div><div class="ace_layer ace_cursor-layer ace_hidden-cursors" style="opacity: 0;"><div class="ace_cursor" style="left: 4px; top: 0px; width: 6.59771px; height: 16.6667px;"></div></div></div></div><div class="ace_scrollbar ace_scrollbar-v" style="width: 22px; bottom: 0px;"><div class="ace_scrollbar-inner" style="width: 22px; height: 2033.33px;"></div></div><div class="ace_scrollbar ace_scrollbar-h" style="display: none; height: 22px; left: 0px; right: 17px;"><div class="ace_scrollbar-inner" style="height: 22px; width: 263px;"></div></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: hidden;"><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;"></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</div></div></div><lively-halo data-lively4-donotpersist="all" style="display: none; top: 5e-05px; left: 0.000328247px; width: 1691px; height: 847px;"></lively-halo><div class=" ace_editor ace_autocomplete ace-tm" style="font-size: 12px; top: 356.865px; height: 133.333px; left: 653.989px; display: none;"><textarea class="ace_text-input" wrap="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="opacity: 0;"></textarea><div class="ace_gutter" style="display: none;"><div class="ace_layer ace_gutter-layer ace_folding-enabled" style="margin-top: 0px;"></div><div class="ace_gutter-active-line" style="display: none;"></div></div><div class="ace_scroller" style="left: 0px; right: 17px; bottom: 0px;"><div class="ace_content" style="cursor: default; margin-top: 0px; width: 263px; height: 166.667px; margin-left: 0px;"><div class="ace_layer ace_print-margin-layer"><div class="ace_print-margin" style="left: 531.817px; visibility: hidden;"></div></div><div class="ace_layer ace_marker-layer"><div class="ace_active-line" style="height:16.666667938232422px;top:33.333335876464844px;left:0;right:0;"></div></div><div class="ace_layer ace_text-layer" style="padding: 0px 4px;"><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">structor</span><span class="ace_rightAlignedText">Object</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tains</span><span class="ace_rightAlignedText">Node</span></div><div class="ace_line ace_selected" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tentIsEditable</span><span class="ace_rightAlignedText">Container</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tentChanged</span><span class="ace_rightAlignedText">lively-container</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tentChangedDelay</span><span class="ace_rightAlignedText">lively-container</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tentEditable</span><span class="ace_rightAlignedText">HTMLElement</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">st</span><span class="ace_rightAlignedText">keyword</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">con</span><span class="ace_">tinue</span><span class="ace_rightAlignedText">keyword</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">c</span><span class="ace_">l</span><span class="ace_completion-highlight">on</span><span class="ace_">eNode</span><span class="ace_rightAlignedText">Node</span></div></div><div class="ace_layer ace_marker-layer"></div><div class="ace_layer ace_cursor-layer ace_hidden-cursors" style="opacity: 0;"><div class="ace_cursor" style="left: 4px; top: 33.3333px; width: 6.59771px; height: 16.6667px;"></div></div></div></div><div class="ace_scrollbar ace_scrollbar-v" style="width: 22px; bottom: 0px;"><div class="ace_scrollbar-inner" style="width: 22px; height: 733.333px;"></div></div><div class="ace_scrollbar ace_scrollbar-h" style="display: none; height: 22px; left: 0px; right: 17px;"><div class="ace_scrollbar-inner" style="height: 22px; width: 263px;"></div></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: hidden;"><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;"></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</div></div></div><div class=" ace_editor ace_autocomplete ace-tm" style="font-size: 12px; top: 506.198px; height: 133.333px; left: 935.368px; display: none;"><textarea class="ace_text-input" wrap="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="opacity: 0;"></textarea><div class="ace_gutter" style="display: none;"><div class="ace_layer ace_gutter-layer ace_folding-enabled" style="margin-top: 0px;"></div><div class="ace_gutter-active-line" style="display: none;"></div></div><div class="ace_scroller" style="left: 0px; right: 17px; bottom: 0px;"><div class="ace_content" style="cursor: default; margin-top: 0px; width: 280px; height: 166.667px; margin-left: 0px;"><div class="ace_layer ace_print-margin-layer"><div class="ace_print-margin" style="left: 531.817px; visibility: hidden;"></div></div><div class="ace_layer ace_marker-layer"><div class="ace_active-line" style="height:16.666667938232422px;top:0px;left:0;right:0;"></div></div><div class="ace_layer ace_text-layer" style="padding: 0px 4px;"><div class="ace_line ace_selected" style="height:16.666667938232422px"><span class="ace_completion-highlight">isE</span><span class="ace_">diting</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">isE</span><span class="ace_">qualNode</span><span class="ace_rightAlignedText">Node</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">isE</span><span class="ace_">diting</span><span class="ace_rightAlignedText">Container</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">content</span><span class="ace_completion-highlight">IsE</span><span class="ace_">ditable</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">v</span><span class="ace_completion-highlight">is</span><span class="ace_">ibl</span><span class="ace_completion-highlight">e</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">h</span><span class="ace_completion-highlight">i</span><span class="ace_">deCancelAnd</span><span class="ace_completion-highlight">S</span><span class="ace_">av</span><span class="ace_completion-highlight">e</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">reg</span><span class="ace_completion-highlight">is</span><span class="ace_">t</span><span class="ace_completion-highlight">e</span><span class="ace_">rButtons</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_">addEventL</span><span class="ace_completion-highlight">is</span><span class="ace_">t</span><span class="ace_completion-highlight">e</span><span class="ace_">ner</span><span class="ace_rightAlignedText">local</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">is</span><span class="ace_">su</span><span class="ace_completion-highlight">e</span><span class="ace_rightAlignedText">local</span></div></div><div class="ace_layer ace_marker-layer"></div><div class="ace_layer ace_cursor-layer ace_hidden-cursors" style="opacity: 0;"><div class="ace_cursor" style="left: 4px; top: 0px; width: 6.59771px; height: 16.6667px;"></div></div></div></div><div class="ace_scrollbar ace_scrollbar-v" style="width: 22px; bottom: 0px;"><div class="ace_scrollbar-inner" style="width: 22px; height: 1333.33px;"></div></div><div class="ace_scrollbar ace_scrollbar-h" style="display: none; height: 22px; left: 0px; right: 17px;"><div class="ace_scrollbar-inner" style="height: 22px; width: 263px;"></div></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: hidden;"><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;"></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</div></div></div><lively-halo data-lively4-donotpersist="all" style="top: 0.0001px; left: 0px; width: 861px; height: 687px; display: none;"></lively-halo><lively-halo style="display: none; top: 0px; left: 0px; width: 1691px; height: 847px;"><span class="hljs-string">'</span>)
            .attr(<span class="hljs-string">'data-lively4-donotpersist'</span>, <span class="hljs-string">'all'</span>)
            .appendTo($(<span class="hljs-string">'body'</span>));
    }
    components.loadUnresolved();
  }
  
  <span class="hljs-keyword">static</span> initializeSearch() {
    <span class="hljs-keyword">if</span> ($(<span class="hljs-string">'lively-search-widget'</span>).size() === <span class="hljs-number">0</span>) {
      $(<span class="hljs-string">'</span><lively-search-widget style="display: none;"><span class="hljs-string">'</span>)
          .attr(<span class="hljs-string">'data-lively4-donotpersist'</span>, <span class="hljs-string">'all'</span>)
          .appendTo($(<span class="hljs-string">'body'</span>));
    }
    components.loadUnresolved();
  }

   <span class="hljs-keyword">static</span> unload() {
      lively.notify(<span class="hljs-string">"unloading Lively is not supported yet! Please reload page...."</span>);
  }

  <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> updateTemplate(html) {
    <span class="hljs-keyword">var</span> tagName = <span class="hljs-keyword">await</span> components.reloadComponent(html);
    <span class="hljs-keyword">if</span> (!tagName) <span class="hljs-keyword">return</span>;

    _.each($(tagName), <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">oldInstance</span>) </span>{
      <span class="hljs-keyword">if</span> (oldInstance.__ingoreUpdates) <span class="hljs-keyword">return</span>;

      <span class="hljs-comment">// if (oldInstance.isMinimized &amp;&amp; oldInstance.isMinimized()) return // ignore minimized windows</span>
      <span class="hljs-comment">// if (oldInstance.isMaximized &amp;&amp; oldInstance.isMaximized()) return // ignore isMaximized windows</span>

      <span class="hljs-keyword">var</span> owner = oldInstance.parentElement;
      <span class="hljs-keyword">var</span> newInstance = <span class="hljs-built_in">document</span>.createElement(tagName);
      
      <span class="hljs-keyword">if</span> (oldInstance.livelyPreMigrate) {
        oldInstance.livelyPreMigrate(oldInstance); 
      }
      owner.replaceChild(newInstance, oldInstance);
      _.each(oldInstance.childNodes, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ea</span>) </span>{
        <span class="hljs-keyword">if</span> (ea) { <span class="hljs-comment">// there are "undefined" elemented in childNodes... sometimes #TODO</span>
          newInstance.appendChild(ea);
          <span class="hljs-comment">// console.log("append old child: " + ea);</span>
        }
      });
      _.each(oldInstance.attributes, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">ea</span>) </span>{
        <span class="hljs-comment">// console.log("set old attribute " + ea.name + " to: " + ea.value);</span>
        newInstance.setAttribute(ea.name, ea.value);
      });

      <span class="hljs-comment">// Migrate Position</span>
      <span class="hljs-keyword">if</span> (oldInstance.style.position == <span class="hljs-string">"absolute"</span>) {
        newInstance.style.top = oldInstance.style.top;
        newInstance.style.left = oldInstance.style.left;
      }

      <span class="hljs-comment">// Migrate "that" pointer</span>
      <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.that == oldInstance) {
        <span class="hljs-built_in">window</span>.that = newInstance;
      }

      <span class="hljs-keyword">if</span> (newInstance.livelyMigrate) {
        newInstance.livelyMigrate(oldInstance); <span class="hljs-comment">// give instances a chance to take over old state...</span>
      }
      
      <span class="hljs-comment">// #LiveProgrammingHack</span>
      <span class="hljs-built_in">document</span>.querySelectorAll(<span class="hljs-string">"lively-inspector"</span>).forEach(<span class="hljs-function"><span class="hljs-params">inspector</span> =&gt;</span> {
        <span class="hljs-keyword">if</span> (inspector.targetObject === oldInstance) {
          inspector.inspect(newInstance)
        }
      })

    });
  }

  <span class="hljs-keyword">static</span> showPoint(point) {
    <span class="hljs-keyword">var</span> comp = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"div"</span>);
    comp.style[<span class="hljs-string">'pointer-events'</span>] = <span class="hljs-string">"none"</span>;
    comp.style.width = <span class="hljs-string">"5px"</span>;
    comp.style.height = <span class="hljs-string">"5px"</span>;
    comp.style.padding = <span class="hljs-string">"1px"</span>;
    comp.style.backgroundColor = <span class="hljs-string">'rgba(255,0,0,0.5)'</span>;
    comp.style.zIndex = <span class="hljs-number">1000</span>;
    comp.isMetaNode = <span class="hljs-literal">true</span>;
    <span class="hljs-built_in">document</span>.body.appendChild(comp);
    lively.setPosition(comp, point);
    comp.setAttribute(<span class="hljs-string">"data-is-meta"</span>, <span class="hljs-string">"true"</span>);

    setTimeout( <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> $(comp).remove(), <span class="hljs-number">3000</span>);
    <span class="hljs-comment">// ea.getBoundingClientRect</span>
    <span class="hljs-keyword">return</span> comp
  }

  <span class="hljs-keyword">static</span> showSource(object, evt) {
    <span class="hljs-keyword">if</span> (object <span class="hljs-keyword">instanceof</span> HTMLElement) {
        <span class="hljs-keyword">var</span> comp  = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"lively-container"</span>);
        components.openInWindow(comp).then(<span class="hljs-function">(<span class="hljs-params">container</span>) =&gt;</span> {
          comp.editFile(lively4url +<span class="hljs-string">"/templates/"</span> + object.localName + <span class="hljs-string">".html"</span>);
        });
    } <span class="hljs-keyword">else</span> {
      lively.notify(<span class="hljs-string">"Could not show source for: "</span> + object);
    }
  }

  <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> showClassSource(object, evt) {
    <span class="hljs-comment">// object = that</span>
    <span class="hljs-keyword">if</span> (object <span class="hljs-keyword">instanceof</span> HTMLElement) {
      <span class="hljs-keyword">let</span> templateFile = lively4url +<span class="hljs-string">"/templates/"</span> + object.localName + <span class="hljs-string">".html"</span>,
        source = <span class="hljs-keyword">await</span> fetch(templateFile).then( <span class="hljs-function"><span class="hljs-params">r</span> =&gt;</span> r.text()),
        template = $.parseHTML(source).find( <span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> ea.tagName == <span class="hljs-string">"TEMPLATE"</span>),
        className = template.getAttribute(<span class="hljs-string">'data-class'</span>),
        baseName = <span class="hljs-keyword">this</span>.templateClassNameToTemplateName(className),
        moduleURL = lively4url +<span class="hljs-string">"/templates/"</span> + baseName + <span class="hljs-string">".js"</span>;
      lively.openBrowser(moduleURL, <span class="hljs-literal">true</span>, className);
    } <span class="hljs-keyword">else</span> {
      lively.notify(<span class="hljs-string">"Could not show source for: "</span> + object);
    }
  }


  <span class="hljs-keyword">static</span> showElement(elem, timeout) {
    <span class="hljs-keyword">if</span> (!elem || !elem.getBoundingClientRect) <span class="hljs-keyword">return</span> ;
    <span class="hljs-keyword">var</span> comp = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"div"</span>);
    <span class="hljs-keyword">var</span> bounds = elem.getBoundingClientRect();
    <span class="hljs-keyword">var</span> pos = lively.pt(
      bounds.left +  $(<span class="hljs-built_in">document</span>).scrollLeft(),
      bounds.top +  $(<span class="hljs-built_in">document</span>).scrollTop());

    comp.style.width = bounds.width +<span class="hljs-string">"px"</span>;
    comp.style.height = bounds.height +<span class="hljs-string">"px"</span>;
    comp.style[<span class="hljs-string">'pointer-events'</span>] = <span class="hljs-string">"none"</span>;
    <span class="hljs-comment">// comp.style.height = "0px"</span>
    comp.style[<span class="hljs-string">"z-index"</span>] = <span class="hljs-number">1000</span>;
    comp.style.border = <span class="hljs-string">"1px solid red"</span>;
    comp.isMetaNode = <span class="hljs-literal">true</span>;
    <span class="hljs-built_in">document</span>.body.appendChild(comp);
    lively.setPosition(comp, pos);
    comp.setAttribute(<span class="hljs-string">"data-is-meta"</span>, <span class="hljs-string">"true"</span>);

    comp.innerHTML = <span class="hljs-string">"</span><pre data-is-meta="true" style="position: relative; top: -8px; width: 200px; background: rgba(255,255,255,0.8); color: red; font-size: 8pt"><span class="hljs-string">"</span> +
        elem.tagName +<span class="hljs-string">": "</span> + elem.id + <span class="hljs-string">"\n"</span> +
        elem.getAttribute(<span class="hljs-string">"class"</span>) +<span class="hljs-string">"\n"</span>

      + <span class="hljs-string">"</span></pre><span class="hljs-string">"</span>;

    setTimeout( <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> $(comp).remove(), timeout || <span class="hljs-number">3000</span>);
    <span class="hljs-keyword">return</span> comp;
  }

  <span class="hljs-keyword">static</span> allProperties(obj, result) {
    result = result || {};
    <span class="hljs-built_in">Object</span>.getOwnPropertyNames(obj).forEach( <span class="hljs-function"><span class="hljs-params">name</span> =&gt;</span> {result[name] = obj.constructor.name});
    <span class="hljs-keyword">if</span> (obj.__proto__) {
      lively.allProperties(obj.__proto__, result);
    }
    <span class="hljs-keyword">return</span> result;
  }
  
  <span class="hljs-keyword">static</span> templateClassNameToTemplateName(className) {
    <span class="hljs-keyword">return</span> className.replace(<span class="hljs-regexp">/[A-Z]/g</span>, ea =&gt; <span class="hljs-string">"-"</span> + ea.toLowerCase()).replace(<span class="hljs-regexp">/^-/</span>,<span class="hljs-string">""</span>);
  }

  <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> registerTemplate() {
    <span class="hljs-keyword">var</span> template = <span class="hljs-built_in">document</span>.currentScript.ownerDocument.querySelector(<span class="hljs-string">'template'</span>);
    <span class="hljs-keyword">var</span> clone = <span class="hljs-built_in">document</span>.importNode(template.content, <span class="hljs-literal">true</span>);
    <span class="hljs-keyword">var</span> proto;
    <span class="hljs-keyword">var</span> className = template.getAttribute(<span class="hljs-string">"data-class"</span>);
    <span class="hljs-keyword">if</span> (className) {
      <span class="hljs-comment">// className = "LivelyFooBar"</span>
      <span class="hljs-keyword">let</span> baseName = <span class="hljs-keyword">this</span>.templateClassNameToTemplateName(className);
      <span class="hljs-keyword">var</span> <span class="hljs-built_in">module</span>= <span class="hljs-keyword">await</span> System.import(lively4url +<span class="hljs-string">'/templates/'</span> + baseName +<span class="hljs-string">".js"</span>);
      proto =  <span class="hljs-built_in">Object</span>.create(<span class="hljs-built_in">module</span>.prototype || <span class="hljs-built_in">module</span>.default.prototype);
    }
    components.register(template.id, clone, proto);
  }

  <span class="hljs-keyword">static</span> get eventListeners() {
    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">window</span>.livelyEventListeners) {
      <span class="hljs-built_in">window</span>.livelyEventListeners = [];
    }
    <span class="hljs-keyword">return</span> <span class="hljs-built_in">window</span>.livelyEventListeners;
  }

  <span class="hljs-keyword">static</span> set eventListeners(list) {
      <span class="hljs-built_in">window</span>.livelyEventListeners = list;
  }

  <span class="hljs-comment">// Registration and deregistration of eventlisteners for run-time programming...</span>
  <span class="hljs-keyword">static</span> addEventListener(domain, target, type, listener, options) {
    <span class="hljs-keyword">this</span>.eventListeners.push(
      {<span class="hljs-attr">target</span>: target, <span class="hljs-attr">type</span>: type, <span class="hljs-attr">listener</span>: listener, <span class="hljs-attr">domain</span>: domain, <span class="hljs-attr">options</span>: options});
    target.addEventListener(type, listener, options);
  }

  <span class="hljs-keyword">static</span> removeEventListener(domain, target, type, listener) {
    <span class="hljs-keyword">this</span>.eventListeners = <span class="hljs-keyword">this</span>.eventListeners.filter(<span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> {
      <span class="hljs-keyword">if</span> ((!target      || (ea.target   === target))
          &amp;&amp; (!type     || (ea.type     ==  type))
          &amp;&amp; (!listener || (ea.listener === listener))
          &amp;&amp; (!domain   || (ea.domain   ==  domain))) {
        <span class="hljs-comment">// actually removing the event listener</span>
        <span class="hljs-comment">// console.log("removeEventListener", ea.target, ea.type, ea.listener)</span>
        ea.target.removeEventListener(ea.type, ea.listener, ea.options);
        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;
      } <span class="hljs-keyword">else</span> {
        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;
      }
    });
  }

  <span class="hljs-keyword">static</span> openSearchWidget(text, worldContext) {
    <span class="hljs-comment">// index based search is not useful at the moment</span>
    <span class="hljs-keyword">if</span> (<span class="hljs-literal">true</span>) {
      <span class="hljs-keyword">this</span>.openComponentInWindow(<span class="hljs-string">"lively-search"</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-literal">undefined</span>, worldContext).then( <span class="hljs-function"><span class="hljs-params">comp</span> =&gt;</span> {
         comp.searchFile(text);
      });
    } <span class="hljs-keyword">else</span> {
      <span class="hljs-keyword">var</span> comp = <span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"lively-search-widget"</span>)[<span class="hljs-number">0</span>];
      <span class="hljs-keyword">if</span> (comp.isVisible &amp;&amp; text == comp.query) {
        comp.isVisible = <span class="hljs-literal">false</span>;
      } <span class="hljs-keyword">else</span> {
        comp.isVisible = <span class="hljs-literal">true</span>;
        comp.search(text, <span class="hljs-literal">true</span>);
      }
    }
  }
  
  <span class="hljs-keyword">static</span> hideSearchWidget() {
    <span class="hljs-keyword">var</span> comp = <span class="hljs-built_in">document</span>.getElementsByTagName(<span class="hljs-string">"lively-search-widget"</span>)[<span class="hljs-number">0</span>];
    comp.hide();
  }

  <span class="hljs-keyword">static</span> openHelpWindow(text) {
    <span class="hljs-keyword">this</span>.openComponentInWindow(<span class="hljs-string">"lively-help"</span>).then(<span class="hljs-function"><span class="hljs-params">comp</span> =&gt;</span> {
      comp.parentElement.style.width = <span class="hljs-string">"850px"</span>;
      comp.parentElement.style.height = <span class="hljs-string">"600px"</span>;
      comp.getHelp(text);
    });
  }

  <span class="hljs-keyword">static</span> openComponentInWindow(name, pos, extent, worldContext) {
    worldContext = worldContext || <span class="hljs-built_in">document</span>.body
    <span class="hljs-keyword">var</span> lastWindow = _.first(lively.array(worldContext.querySelectorAll(<span class="hljs-string">"lively-window"</span>)));
  
  
    <span class="hljs-keyword">var</span> w = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"lively-window"</span>);
    <span class="hljs-keyword">if</span> (extent) {
      w.style.width = extent.x;
      w.style.height = extent.y;
    }
    <span class="hljs-keyword">if</span> (lastWindow) {
      <span class="hljs-keyword">var</span> lastPos = lively.getPosition(lastWindow);
      <span class="hljs-keyword">var</span> windowWidth = w.getBoundingClientRect().width;
      <span class="hljs-keyword">if</span> (lastPos !== <span class="hljs-literal">undefined</span> &amp;&amp; windowWidth !== <span class="hljs-literal">undefined</span>) {
        lively.setPosition(w, lastPos.addPt(pt(<span class="hljs-number">25</span>,<span class="hljs-number">25</span>)));
      }      
    }
    <span class="hljs-keyword">return</span> components.openIn(worldContext, w, <span class="hljs-literal">true</span>).then(<span class="hljs-function">(<span class="hljs-params">w</span>) =&gt;</span> {
    	<span class="hljs-keyword">return</span> components.openIn(w, <span class="hljs-built_in">document</span>.createElement(name)).then(<span class="hljs-function">(<span class="hljs-params">comp</span>) =&gt;</span> {
    	  <span class="hljs-keyword">if</span> (pos) 
          lively.setPosition(w, pos);
        
        <span class="hljs-keyword">if</span> (comp.windowTitle) w.setAttribute(<span class="hljs-string">"title"</span>, <span class="hljs-string">""</span> + comp.windowTitle);
        <span class="hljs-keyword">return</span> comp
    	})
    })
  }
  
  <span class="hljs-comment">// lively.openBrowser("https://lively4/etc/mounts", true, "Github")</span>
  <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> openBrowser(url, edit, patternOrPostion, replaceExisting, worldContext) {
    worldContext = worldContext || <span class="hljs-built_in">document</span>.body
    <span class="hljs-keyword">if</span> (patternOrPostion &amp;&amp; patternOrPostion.line)
      <span class="hljs-keyword">var</span> lineAndColumn = patternOrPostion
    <span class="hljs-keyword">else</span> 
      <span class="hljs-keyword">var</span> pattern = patternOrPostion

    <span class="hljs-keyword">if</span> (!url || !url.match(<span class="hljs-regexp">/^http/</span>))
      url = lively4url
    <span class="hljs-keyword">var</span> editorComp;
    <span class="hljs-keyword">var</span> containerPromise;
    <span class="hljs-keyword">if</span> (replaceExisting) {
      editorComp = _.detect(worldContext.querySelectorAll(<span class="hljs-string">"lively-container"</span>), 
        ea =&gt; ea.isSearchBrowser);
    } 
 
    <span class="hljs-keyword">var</span> lastWindow = _.first(lively.array(worldContext.querySelectorAll(<span class="hljs-string">"lively-window"</span>))
      .filter(  <span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> ea.childNodes[<span class="hljs-number">0</span>].isSearchBrowser));
      
    containerPromise = editorComp ? <span class="hljs-built_in">Promise</span>.resolve(editorComp) :
      lively.openComponentInWindow(<span class="hljs-string">"lively-container"</span>, <span class="hljs-literal">undefined</span>, <span class="hljs-literal">undefined</span>, worldContext);

    <span class="hljs-keyword">return</span> containerPromise.then(<span class="hljs-function"><span class="hljs-params">comp</span> =&gt;</span> {
      editorComp = comp;
      comp.parentElement.style.width = <span class="hljs-string">"850px"</span>;
      comp.parentElement.style.height = <span class="hljs-string">"600px"</span>;
      
      <span class="hljs-keyword">if</span> (lastWindow) {
        lively.setPosition(comp.parentElement, 
          lively.getPosition(lastWindow).addPt(pt(<span class="hljs-number">25</span>,<span class="hljs-number">25</span>)));
      }

      <span class="hljs-keyword">if</span> (edit) comp.setAttribute(<span class="hljs-string">"mode"</span>, <span class="hljs-string">"edit"</span>);
      <span class="hljs-keyword">if</span> (pattern) {
        comp.isSearchBrowser = <span class="hljs-literal">true</span>;
        comp.hideNavbar();
      }
      <span class="hljs-keyword">return</span> comp.followPath(url)
    }).then(<span class="hljs-keyword">async</span> () =&gt; {
      <span class="hljs-keyword">if</span> (edit) {
        <span class="hljs-keyword">await</span> editorComp.asyncGet(<span class="hljs-string">"#editor"</span>).then(<span class="hljs-function"><span class="hljs-params">livelyEditor</span> =&gt;</span> {
          <span class="hljs-keyword">var</span> ace = livelyEditor.currentEditor();
          <span class="hljs-keyword">if</span>(pattern)
            ace.find(pattern);
          <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lineAndColumn) {
            ace.gotoLine(lineAndColumn.line, lineAndColumn.column)
          }
        });
      }
      <span class="hljs-keyword">return</span> editorComp
    });
  }
  
  <span class="hljs-keyword">static</span> openDebugger() {
    <span class="hljs-keyword">if</span>(!<span class="hljs-built_in">window</span>.lively4ChromeDebugger) {
      <span class="hljs-keyword">return</span> lively.notify(<span class="hljs-string">"Please install Lively4Chrome Extension for debugger support."</span>);
    } 
    lively4ChromeDebugger.getCurrentDebuggingTarget().then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> {
      <span class="hljs-comment">// Use chrome.window.create to create an independent window, window.open does not work</span>
      lively4ChromeDebugger.createWindow({
      	<span class="hljs-attr">url</span>: lively4url + <span class="hljs-string">'/debugger.html?targetId='</span> + res.targetId,
      	<span class="hljs-attr">width</span>: <span class="hljs-number">1000</span>, <span class="hljs-attr">left</span>: <span class="hljs-built_in">parseInt</span>((screen.width - <span class="hljs-number">1000</span>)/<span class="hljs-number">2</span>),
      	<span class="hljs-attr">height</span>: <span class="hljs-number">750</span>, <span class="hljs-attr">top</span>: <span class="hljs-built_in">parseInt</span>((screen.height - <span class="hljs-number">750</span>)/<span class="hljs-number">2</span>),
      	<span class="hljs-attr">type</span>: <span class="hljs-string">'popup'</span>
      }).catch(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> {
        lively.notify(<span class="hljs-string">"Unable to create new window for debugger."</span>)
      });
    });
  }
  
  <span class="hljs-keyword">static</span> get(query) {
    <span class="hljs-keyword">return</span> <span class="hljs-built_in">document</span>.querySelector(query)
  }
  
  <span class="hljs-keyword">static</span> confirm(msg) {
    <span class="hljs-keyword">return</span> Dialog.confirm(msg)
  }
  
  <span class="hljs-keyword">static</span> prompt(msg, value) {
    <span class="hljs-keyword">return</span> Dialog.prompt(msg, value)
  }
  
  <span class="hljs-keyword">static</span> findWorldContext(element) {
    <span class="hljs-keyword">if</span> (!element) <span class="hljs-keyword">return</span> <span class="hljs-built_in">document</span>.body
    <span class="hljs-keyword">if</span> (element.tagName == <span class="hljs-string">"BODY"</span> || element.tagName == <span class="hljs-string">"LIVELY-CONTAINER"</span>)
      <span class="hljs-keyword">return</span> element
    <span class="hljs-keyword">else</span>
      <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.findWorldContext(element.parentElement)
  }

  
  <span class="hljs-comment">// lively.print(document)</span>
  <span class="hljs-keyword">static</span> print(obj) {
    <span class="hljs-keyword">var</span> s = <span class="hljs-string">""</span> + obj + <span class="hljs-string">"{"</span>
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i <span class="hljs-keyword">in</span> obj) {
      <span class="hljs-keyword">if</span> (!(obj[i] <span class="hljs-keyword">instanceof</span> <span class="hljs-built_in">Function</span>) &amp;&amp; obj[i] !== <span class="hljs-literal">undefined</span>)
      s += i + <span class="hljs-string">": "</span> + obj[i] + <span class="hljs-string">"\n"</span>
    }
    s +<span class="hljs-string">"}"</span>
    <span class="hljs-keyword">return</span> s
  }
  
  <span class="hljs-keyword">static</span> currentStack() {
  <span class="hljs-keyword">try</span> {
    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">"XYZError"</span>)
  } <span class="hljs-keyword">catch</span>(e) {
    <span class="hljs-keyword">return</span> e.stack.split(<span class="hljs-string">"\n"</span>)
      .filter(<span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> !ea.match(<span class="hljs-string">"src/external/ContextJS/src/Layers.js"</span>) )
      .filter(<span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> !ea.match(<span class="hljs-string">"XYZError"</span>) )
      .filter(<span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> !ea.match(<span class="hljs-string">"currentStack"</span>) )
      .map(<span class="hljs-function"><span class="hljs-params">ea</span> =&gt;</span> ea.replace(<span class="hljs-regexp">/\(.*?\)/</span>,<span class="hljs-string">""</span>))
      .join(<span class="hljs-string">"\n"</span>)
  }
}
  
}

<span class="hljs-keyword">if</span> (!<span class="hljs-built_in">window</span>.lively || <span class="hljs-built_in">window</span>.lively.name != <span class="hljs-string">"Lively"</span>) {
  <span class="hljs-built_in">window</span>.lively = Lively;
  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"loaded lively intializer"</span>);
  <span class="hljs-comment">// only load once... not during development</span>
  Lively.loaded();
} <span class="hljs-keyword">else</span> {
  <span class="hljs-keyword">var</span> oldLively = <span class="hljs-built_in">window</span>.lively
  Lively.previous = oldLively
  <span class="hljs-built_in">window</span>.lively = Lively;
}

Lively.exportModules();
  
<span class="hljs-built_in">console</span>.log(<span class="hljs-string">"loaded lively"</span>);
</lively-search-widget></lively-halo><div class=" ace_editor ace_autocomplete ace-tm" style="font-size: 12px; top: 502.865px; height: 50px; left: 781.173px; display: none;"><textarea class="ace_text-input" wrap="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="opacity: 0;"></textarea><div class="ace_gutter" style="display: none;"><div class="ace_layer ace_gutter-layer ace_folding-enabled" style="margin-top: 0px;"></div><div class="ace_gutter-active-line" style="display: none;"></div></div><div class="ace_scroller" style="left: 0px; right: 0px; bottom: 0px;"><div class="ace_content" style="cursor: default; margin-top: 0px; width: 280px; height: 83.3333px; margin-left: 0px;"><div class="ace_layer ace_print-margin-layer"><div class="ace_print-margin" style="left: 531.817px; visibility: hidden;"></div></div><div class="ace_layer ace_marker-layer"><div class="ace_active-line" style="height:16.666667938232422px;top:0px;left:0;right:0;"></div></div><div class="ace_layer ace_text-layer" style="padding: 0px 4px;"><div class="ace_line ace_selected" style="height:16.666667938232422px"><span class="ace_completion-highlight">g</span><span class="ace_">etG</span><span class="ace_completion-highlight">l</span><span class="ace_">obalSource</span><span class="ace_rightAlignedText">Function</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">g</span><span class="ace_">etFi</span><span class="ace_completion-highlight">l</span><span class="ace_">ter</span><span class="ace_rightAlignedText">Function</span></div><div class="ace_line" style="height:16.666667938232422px"><span class="ace_completion-highlight">g</span><span class="ace_">etHtm</span><span class="ace_completion-highlight">l</span><span class="ace_">Content</span><span class="ace_rightAlignedText">Function</span></div></div><div class="ace_layer ace_marker-layer"></div><div class="ace_layer ace_cursor-layer ace_hidden-cursors" style="opacity: 0;"><div class="ace_cursor" style="left: 4px; top: 0px; width: 6.59771px; height: 16.6667px;"></div></div></div></div><div class="ace_scrollbar ace_scrollbar-v" style="display: none; width: 22px; bottom: 0px;"><div class="ace_scrollbar-inner" style="width: 22px; height: 50px;"></div></div><div class="ace_scrollbar ace_scrollbar-h" style="display: none; height: 22px; left: 0px; right: 0px;"><div class="ace_scrollbar-inner" style="height: 22px; width: 280px;"></div></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: hidden;"><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;"></div><div style="height: auto; width: auto; top: 0px; left: 0px; visibility: hidden; position: absolute; white-space: pre; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; overflow: visible;">XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</div></div></div><lively-notification-list hidden=""></lively-notification-list>